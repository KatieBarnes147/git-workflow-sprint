FROM golang:1.23-alpine AS builder

# Install protoc and protoc-gen-go
RUN apk add --no-cache protobuf-dev

# Install latest versions (compatible with Go 1.23)
RUN go install google.golang.org/protobuf/cmd/protoc-gen-go@latest
RUN go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@latest

# Set working directory
WORKDIR /app

# Initialize go module
RUN go mod init go-server

# Copy proto file and generate Go code
COPY proto/user_service.proto ./proto/

# Generate proto files
RUN protoc --go_out=. --go_opt=paths=source_relative \
           --go-grpc_out=. --go-grpc_opt=paths=source_relative \
           proto/user_service.proto

# Copy main.go
COPY go-server/main.go ./

# Let Go automatically resolve all dependencies
RUN go mod tidy

# Build the application
RUN go build -o main .

# Final stage
FROM alpine:latest
RUN apk --no-cache add ca-certificates
WORKDIR /root/

# Copy the binary from builder stage
COPY --from=builder /app/main .

# Expose port
EXPOSE 50051

# Run the application
CMD ["./main"]